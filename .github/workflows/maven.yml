# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  create:
    tags:

jobs:
  build:
    name: Build and test
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
        architecture: x64
    - name: Compile
      run: mvn --batch-mode --update-snapshots compile
    - name: Unit tests
      run: mvn --batch-mode --update-snapshots test
    - name: Package war
      id: package
      run: mvn --batch-mode --update-snapshots --define maven.test.skip=true package
    - name: Upload artifact
      if: steps.package.outcome == 'success'
      uses: actions/upload-artifact@v2
      with:
        name: War artifact
        path: target/*.war
    - name: Upload war pre-release
      uses: "marvinpinto/action-automatic-releases@latest"
      if: steps.package.outcome == 'success' && github.event_name == 'push'
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        automatic_release_tag: "latest"
        prerelease: true
        title: "Latest Build"
        files: |
          LICENSE
          target/*.war
    - name: Upload war release
      uses: "marvinpinto/action-automatic-releases@latest"
      if: steps.package.outcome == 'success' && github.event_name == 'create' && startsWith(github.ref, 'refs/tags/v')
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        prerelease: false
        files: |
          LICENSE
          target/*.war
    - name: Integration tests
      run: mvn --batch-mode --update-snapshots verify
    - name: Build Maven site
      id: buildsite
      run: mvn --batch-mode site
    - name: Publish site with Github Pages
      if: steps.buildsite.outcome == 'success'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: target/site
